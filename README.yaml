---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: example-app-on-lambda

# Tags of this project
tags:
  - example-app
  - github-action
  - lambda
  - CI/CD

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/example-app-on-lambda-with-gha

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/example-app-on-lambda-with-gha.svg"
    url: "https://github.com/cloudposse/example-app-on-lambda-with-gha/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "github-actions-workflows"
    description: "Reusable workflows for different types of projects"
    url: "https://github.com/cloudposse/github-actions-workflows"

# Short description of this project
description: |-
  Example Python application deployed on AWS Lambda with Github Actions.
  
  ## What
  This example has two primary workflows, `lambda-hello-world-python.yaml` and
  `promote-lambda-hello-world-python.yaml`. The first workflow is triggered on
  PRs and pushes to the `main` branch. It builds the application and puts it into an
  s3 bucket, then updates ssm variables for the application. The second workflow
  is triggered on a release. It does not build the application, but rather just copies
  the application from the staging s3 bucket to the production s3 bucket and updates
  the ssm variables for the application.

  ## How
  There are three supporting github actions that are prefixed with `reusable`. These
  break down the tasks for managing lambda applications.

  ## Getting Started
  To get started, you will need to create a new repository from this template. Then
  you will need to update the `lambda-hello-world-python.yaml` to use your own
  s3 bucket and ssm variables. The IAM roles used in each account (dev, staging, prod)
  will all also need to be set. We configure them here as secrets to prevent leaking
  role and account information. Lastly, you'll want to add secrets for spacelift and
  also specify the spacelift stack name. Those allow the action to trigger updates.
  

introduction: |-
  * [Docker](https://docs.docker.com/engine/reference/builder/) for developing, shipping, and running,
  * [ECR](https://aws.amazon.com/ecr/) to store the Docker images
  * [EKS](https://aws.amazon.com/lambda) for running application in scale
  * [Helmfile](https://github.com/roboll/helmfile) as declarative deploy manifest

# Contributors to this project
contributors:
  - name: "Jeremy White"
    github: "dudymas"
  - name: "Benjamin Smith"
    github: "benbentwo"